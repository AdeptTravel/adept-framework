CREATE TABLE component_acl (
    component   VARCHAR(64)  PRIMARY KEY,                   -- 'content', 'shop'
    enabled     BOOL         NOT NULL DEFAULT TRUE,
    updated_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
                           ON UPDATE CURRENT_TIMESTAMP
);
CREATE INDEX idx_component_acl_enabled ON component_acl (enabled);

CREATE TABLE route_alias (
    alias_path   VARCHAR(255) PRIMARY KEY,
    target_path  VARCHAR(255) NOT NULL,
    created_at   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
                           ON UPDATE CURRENT_TIMESTAMP
);
CREATE INDEX idx_route_alias_updated ON route_alias (updated_at);

CREATE TABLE route_redirect (
    old_path     VARCHAR(255) PRIMARY KEY,
    new_path     VARCHAR(255) NOT NULL,
    created_at   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE role (
    id          BIGINT PRIMARY KEY AUTO_INCREMENT,
    name        VARCHAR(64)  NOT NULL UNIQUE,               -- 'viewer', 'editor'
    enabled     BOOL         NOT NULL DEFAULT TRUE,
    description TEXT,
    created_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
                           ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE role_acl (
    role_id    BIGINT       NOT NULL,
    component  VARCHAR(32)  NOT NULL,
    action     VARCHAR(32)  NOT NULL,                       -- 'view', 'edit'
    permitted  BOOL         NOT NULL DEFAULT TRUE,
    PRIMARY KEY (role_id, component, action),
    FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE
);
CREATE INDEX idx_role_acl_lookup ON role_acl (role_id, component);

CREATE TABLE user_role (
    user_id  BIGINT NOT NULL,              -- references global_db.users(id) conceptually
    role_id  BIGINT NOT NULL,              -- FK below
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE
);

CREATE INDEX idx_user_role_user ON user_role (user_id);



-- 20250619_create_form_submission.sql
--
-- Adept – Tenant schema migration: generic form submission archive.
--
-- Context
--   The internal/form “store” action inserts one JSON row for every successful
--   form submission when the YAML lists `- type: store`.  Each tenant schema
--   gets its own table so submissions remain siloed.  A minimal index on
--   submitted_at makes recent-history queries fast.
--
-- Two-space sentence spacing and Oxford comma per style guide.
--

CREATE TABLE IF NOT EXISTS form_submission (
    id           BIGINT PRIMARY KEY AUTO_INCREMENT,
    form_id      TEXT        NOT NULL,
    submitted_at TIMESTAMP   NOT NULL DEFAULT NOW(),
    data         JSON       NOT NULL,   -- sanitized values
    -- optional foreign key columns (e.g., user_id) can be added later.
    -- storing data as JSONB keeps the schema flexible.
    CONSTRAINT fk_form CHECK (form_id <> '')
);

CREATE INDEX IF NOT EXISTS form_submission_submitted_at_idx
    ON form_submission (submitted_at DESC);

COMMENT ON TABLE  form_submission IS
    'Archive of generic form submissions generated by internal/form store action.';
COMMENT ON COLUMN form_submission.data IS
    'Sanitized key/value pairs of the submitted form.';
